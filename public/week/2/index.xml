<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="https://www.w3.org/2005/Atom">
  <channel>
    <title>Week 2: May 11 on HIST3814o</title>
    <link>https://craftingdh.netlify.com/week/2/</link>
    <description>Recent content in Week 2: May 11 on HIST3814o</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>shawn.graham@carleton.ca (Dr. Shawn Graham)</managingEditor>
    <webMaster>shawn.graham@carleton.ca (Dr. Shawn Graham)</webMaster>
    <copyright>Original content by Shawn Graham and Rob Blades licensed under a &lt;a rel=&#39;license&#39; href=&#39;http://creativecommons.org/licenses/by-nc/4.0/&#39;&gt;Creative Commons Attribution-NonCommercial 4.0 International License&lt;/a&gt;&lt;br&gt;&lt;a rel=&#39;license&#39; href=&#39;http://creativecommons.org/licenses/by-nc/4.0/&#39;&gt;&lt;img alt=&#39;Creative Commons License logo&#39; style=&#39;border-width:0&#39; src=&#39;https://i.creativecommons.org/l/by-nc/4.0/88x31.png&#39; /&gt;&lt;/a&gt;</copyright>
    <lastBuildDate>Tue, 28 Jan 2020 00:10:51 +0900</lastBuildDate>
    
        <atom:link href="https://craftingdh.netlify.com/week/2/index.xml" rel="self" type="application/rss+xml" />
    
    
    
      
      <item>
        <title>Instructions: May 11</title>
        <link>https://craftingdh.netlify.com/week/2/instructions/</link>
        <pubDate>Tue, 28 Jan 2020 00:10:48 +0900</pubDate>
        <author>shawn.graham@carleton.ca (Dr. Shawn Graham)</author>
        <guid>https://craftingdh.netlify.com/week/2/instructions/</guid>
        <description>Basic Tools Goals for this week  learn some of the ways historical information is made available digitally, paying attention to disparities of labour, and of tech  Listen Feed for the podcast here.
 Read Something given. That&amp;rsquo;s a nice way of thinking about it. Of course, much of the data that we are &amp;lsquo;given&amp;rsquo; wasn&amp;rsquo;t really given willingly. When we topic model Martha Ballard&amp;rsquo;s diary, did she give this to us?</description>
      </item>
      
      <item>
        <title>Setting up Anaconda</title>
        <link>https://craftingdh.netlify.com/week/2/installing-anaconda/</link>
        <pubDate>Tue, 28 Jan 2020 00:10:51 +0900</pubDate>
        <author>shawn.graham@carleton.ca (Dr. Shawn Graham)</author>
        <guid>https://craftingdh.netlify.com/week/2/installing-anaconda/</guid>
        <description>Introduction Cost = $0.
Anaconda is a platform for data science work. By installing Anaconda, you get access to a series of tools for working in both the Python and R programming languages, plus excellent visual interfaces that reduce (some of) the pain of programming.
When we do work in python, we sometimes need to add more lego-pieces to what we&amp;rsquo;re doing, to accomplish specific tasks. Anaconda comes with very nearly - but not all - of the pieces you might need.</description>
      </item>
      
      <item>
        <title>Wget</title>
        <link>https://craftingdh.netlify.com/week/2/wget/</link>
        <pubDate>Tue, 28 Jan 2020 00:10:51 +0900</pubDate>
        <author>shawn.graham@carleton.ca (Dr. Shawn Graham)</author>
        <guid>https://craftingdh.netlify.com/week/2/wget/</guid>
        <description>The following combines elements of Ian Milligan&amp;rsquo;s tutorial at The Programming Historian, as well as Kellen Kurschinski&amp;rsquo;s.
Introduction Wget is a program for downloading materials from the web. It is extremely powerful: if we do it wrong we can look like an attacker, or worse, download the entire internet! We use this program on the command line. We will cover some of the basics, and then we will create a little program that uses wget to download materials from Library and Archives Canada.</description>
      </item>
      
      <item>
        <title>APIs</title>
        <link>https://craftingdh.netlify.com/week/2/apis/</link>
        <pubDate>Tue, 28 Jan 2020 00:10:51 +0900</pubDate>
        <author>shawn.graham@carleton.ca (Dr. Shawn Graham)</author>
        <guid>https://craftingdh.netlify.com/week/2/apis/</guid>
        <description>Sometimes, a website will have what is called an Application Programming Interface or API. In essence, this lets a program on your computer talk to the computer serving the website you&amp;rsquo;re interested in, such that the website gives you the data that you&amp;rsquo;re looking for.
An API is just a way of opening up a program so that another program can interact with it. That is, instead of an interface meant for a human to interact with the machine, thereâ€™s an API to allow some other machine to interact with this one.</description>
      </item>
      
      <item>
        <title>OCR</title>
        <link>https://craftingdh.netlify.com/week/2/ocr/</link>
        <pubDate>Tue, 28 Jan 2020 00:10:51 +0900</pubDate>
        <author>shawn.graham@carleton.ca (Dr. Shawn Graham)</author>
        <guid>https://craftingdh.netlify.com/week/2/ocr/</guid>
        <description>Object Character Recognition is a technique that looks at the pattern of light and dark pixels in an image and matches them against the alphabet. The technique was developed against clean type-written pages where the letters were crisply made. On historical documents, things can get pretty hit-and-miss. When we searched the Chronicling America website, we were actually searching the OCR&amp;rsquo;d text that was embedded in each of those pdfs (if you can select text in a pdf, it has a hidden text layer on top of the image.</description>
      </item>
      
      <item>
        <title>This week&#39;s bonus</title>
        <link>https://craftingdh.netlify.com/week/2/bonus/</link>
        <pubDate>Tue, 28 Jan 2020 00:10:51 +0900</pubDate>
        <author>shawn.graham@carleton.ca (Dr. Shawn Graham)</author>
        <guid>https://craftingdh.netlify.com/week/2/bonus/</guid>
        <description>Historian&amp;rsquo;s don&amp;rsquo;t deal with video very well. That is to say, we don&amp;rsquo;t have many tools for dealing with video as video, as a moving image, and analyzing with an eye towards the specific affordances of the medium (but see Arnold and Tilton&amp;rsquo;s &amp;lsquo;Distant Viewing&amp;rsquo; project, and their position paper.)
But we&amp;rsquo;re good with text. In this bonus exercise, you&amp;rsquo;ll download a video from youtube of Dr. Martin Luther King&amp;rsquo;s &amp;lsquo;I have a dream&amp;rsquo; speech (wikipedia), and use Google&amp;rsquo;s speech-to-text engine to generate a time-stamped transcript of the speech.</description>
      </item>
      
    
  </channel>
</rss>